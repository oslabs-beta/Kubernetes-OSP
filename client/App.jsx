import React from 'react';
import {LineGraph} from './components/LineGraph.jsx';

//Use temporary data for now, should ultimately be fecthed data

 //Sample data 1-->12 Entries over 1 hour for one query
// const results =  [ 
//     {
//       Timestamps: [
//         '2024-05-20T17:09:00.000Z',
//         '2024-05-20T17:04:00.000Z',
//         '2024-05-20T16:59:00.000Z',
//         '2024-05-20T16:54:00.000Z',
//         '2024-05-20T16:49:00.000Z',
//         '2024-05-20T16:44:00.000Z',
//         '2024-05-20T16:39:00.000Z',
//         '2024-05-20T16:34:00.000Z',
//         '2024-05-20T16:29:00.000Z',
//         '2024-05-20T16:24:00.000Z',
//         '2024-05-20T16:19:00.000Z',
//         '2024-05-20T16:14:00.000Z'
//       ],
//       Values:[
//       0.07473635170918193,
//       0.07729661186572193,
//       0.0750469506914183,
//       0.07801263615465083,
//       0.07487194454494137,
//       0.07400778949384972,
//       0.07418980145037643,
//       0.07645512991907011,
//       0.07745752357618287,
//       0.07617009018990356,
//       0.07543329715215659,
//       0.0749227148829265
//       ]
//     }
// ]

 //Sample data 2-->12 Entries over 1 hour for one query
// const results =  [
//         {
//           "Id": "m1",
//           "Label": "container_cpu_utilization",
//           "Timestamps": [
//               "2024-05-20T23:27:00.000Z",
//               "2024-05-20T23:26:00.000Z",
//               "2024-05-20T23:25:00.000Z",
//               "2024-05-20T23:24:00.000Z",
//               "2024-05-20T23:23:00.000Z",
//               "2024-05-20T23:22:00.000Z",
//               "2024-05-20T23:21:00.000Z",
//               "2024-05-20T23:20:00.000Z",
//               "2024-05-20T23:19:00.000Z",
//               "2024-05-20T23:18:00.000Z",
//               "2024-05-20T23:17:00.000Z",
//               "2024-05-20T23:16:00.000Z",
//               "2024-05-20T23:15:00.000Z",
//               "2024-05-20T23:14:00.000Z",
//               "2024-05-20T23:13:00.000Z",
//               "2024-05-20T23:12:00.000Z",
//               "2024-05-20T23:11:00.000Z",
//               "2024-05-20T23:10:00.000Z",
//               "2024-05-20T23:09:00.000Z",
//               "2024-05-20T23:08:00.000Z",
//               "2024-05-20T23:07:00.000Z",
//               "2024-05-20T23:06:00.000Z",
//               "2024-05-20T23:05:00.000Z",
//               "2024-05-20T23:04:00.000Z",
//               "2024-05-20T23:03:00.000Z",
//               "2024-05-20T23:02:00.000Z",
//               "2024-05-20T23:01:00.000Z",
//               "2024-05-20T23:00:00.000Z",
//               "2024-05-20T22:59:00.000Z",
//               "2024-05-20T22:58:00.000Z",
//               "2024-05-20T22:57:00.000Z",
//               "2024-05-20T22:56:00.000Z",
//               "2024-05-20T22:55:00.000Z",
//               "2024-05-20T22:54:00.000Z",
//               "2024-05-20T22:53:00.000Z",
//               "2024-05-20T22:52:00.000Z",
//               "2024-05-20T22:51:00.000Z",
//               "2024-05-20T22:50:00.000Z",
//               "2024-05-20T22:49:00.000Z",
//               "2024-05-20T22:48:00.000Z",
//               "2024-05-20T22:47:00.000Z",
//               "2024-05-20T22:46:00.000Z",
//               "2024-05-20T22:45:00.000Z",
//               "2024-05-20T22:44:00.000Z",
//               "2024-05-20T22:43:00.000Z",
//               "2024-05-20T22:42:00.000Z",
//               "2024-05-20T22:41:00.000Z",
//               "2024-05-20T22:40:00.000Z",
//               "2024-05-20T22:39:00.000Z",
//               "2024-05-20T22:38:00.000Z",
//               "2024-05-20T22:37:00.000Z",
//               "2024-05-20T22:36:00.000Z",
//               "2024-05-20T22:35:00.000Z",
//               "2024-05-20T22:34:00.000Z",
//               "2024-05-20T22:33:00.000Z",
//               "2024-05-20T22:32:00.000Z",
//               "2024-05-20T22:31:00.000Z",
//               "2024-05-20T22:30:00.000Z",
//               "2024-05-20T22:29:00.000Z",
//               "2024-05-20T22:28:00.000Z"
//           ],
//           "Values": [
//               0.06481481869581435,
//               0.0678928446624351,
//               0.0689998936131094,
//               0.06301990932208944,
//               0.06627987243695134,
//               0.06493561630229597,
//               0.06536219884301392,
//               0.06573918155288322,
//               0.06422984714006222,
//               0.06561958961738129,
//               0.06938708497932466,
//               0.06361462182441847,
//               0.06485725939241656,
//               0.0642573168984206,
//               0.07047077217557414,
//               0.06823247194804394,
//               0.06869659840054759,
//               0.06089940468361541,
//               0.06532404225405519,
//               0.06547285646953072,
//               0.06549708360911798,
//               0.06545207512393215,
//               0.06710712395050339,
//               0.06147331926092301,
//               0.06747391355276847,
//               0.06407483999822745,
//               0.06911082557388103,
//               0.06395317994826752,
//               0.06563108150700182,
//               0.0636050486424766,
//               0.06857062646940149,
//               0.06910785165894744,
//               0.06599870983127687,
//               0.06665941861236513,
//               0.06563699036021586,
//               0.06511372164972626,
//               0.0643056192781604,
//               0.06933491812287719,
//               0.0654939971952009,
//               0.06470594444988563,
//               0.06828132364919093,
//               0.06420866936497502,
//               0.06582174534721519,
//               0.06460367851657171,
//               0.06617420019119337,
//               0.06696207921786058,
//               0.06793073596648178,
//               0.06173281159821925,
//               0.06998416938861704,
//               0.06246160332412403,
//               0.06614100853026883,
//               0.06550001446322107,
//               0.0636650838852299,
//               0.06495610633881825,
//               0.06591784238072265,
//               0.06518409597511728,
//               0.06525568645055443,
//               0.06371444670733875,
//               0.07286858097793336,
//               0.06411757322527087
//           ],
//           "StatusCode": "Complete",
//           "Messages": []
//       },
    
//   ];

const timeArr = results[0].Timestamps;
timeArr.reverse();
const xUtilData = timeArr.map((el) => {
  let currDate = new Date(el);
  let lastDate = new Date(timeArr[timeArr.length-1]);  
  let min = ((lastDate.getTime()-currDate.getTime())/1000/60);
  return min;
});

const yUtilData = results[0].Values.map((el) => el.toFixed(3))
yUtilData.reverse();

// let test = new Date(timeArr[0]);
// console.log(test.getTime());
// let tes2 = new Date(timeArr[timeArr.length-1]);
// console.log(tes2.getTime());
// console.log((tes2.getTime()-test.getTime())/1000/60);
// console.log(timeArr.length-1);

// const xData = [];
// for (let i = 0; i < 12; i++){
//   xData.push((i+1)*5);
// };



const App = () => {
  return (
    <>      
        <div id="nav-bar" className="container">Let's Go Kubilyze!</div>
        <div id="page">
          <div id="side-bar" className="container"></div>
          <div id="main-area" className="container">
            <div id="graph-area">
              <div id="graph">
              <LineGraph xData={xUtilData} yData={yUtilData} type='CPU Utilization'/>
              </div>
              <div id="graph">
              <LineGraph xData={xUtilData} yData={yUtilData} type='Memory Utilization'/>
              </div>           
            </div>
          </div>
        </div>
    </>
  );
};

export default App;
